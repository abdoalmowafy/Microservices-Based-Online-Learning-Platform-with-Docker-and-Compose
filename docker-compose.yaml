# version: "3.9"

services:

  # Gateway
  gateway:
    build: ./gateway
    ports:
      - "4000:${Gateway_PORT}"
    depends_on:
      - user
      - course
      - lesson
      - progress
    environment:
      - NODE_ENV=development


  # Mailhog
  mailhog:
      image: mailhog/mailhog
      ports:
        - "8025:8025" # Web UI
        - "1025:1025" # SMTP
      networks:
        - auth-network


  # Message Queue (RabbitMQ)
  rabbitmq:
    image: rabbitmq:4.1.2-management
    ports:
      - "5672:5672"
      - "15672:15672" # Web UI
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    networks:
      - auth-network
      - upload-network
      - user-network
      - course-network
      - lesson-network
      - progress-network
      - billing-network
      - notification-network


  # Auth Service (REST + .NET + PostgreSQL)
  auth:
    build: ./services/auth
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings:DefaultConnection=Host=auth-db;Port=5432;Database=auth_db;Username=${AuthService_Database_Username};Password=${AuthService_Database_Password};
      - JwtConfig:Issuer=${JwtConfig_Issuer}
      - JwtConfig:Audience=${JwtConfig_Audience}
      - JwtConfig:Key=${JwtConfig_Key}
      - JwtConfig:AccessTokenValidityMins=${JwtConfig_AccessTokenValidityMins}
      - JwtConfig:RefreshTokenValidityDays=${JwtConfig_RefreshTokenValidityDays}
      - Email:Smtp:Host=${Email_Smtp_Host}
      - Email:Smtp:From=${Email_Smtp_From}
      - Email:Smtp:Port=${Email_Smtp_Port}
      - Email:Smtp:Username=${Email_Smtp_Username}
      - Email:Smtp:Password=${Email_Smtp_Password}
      - RabbitMQ:Host=rabbitmq://rabbitmq:5672
      - RabbitMQ:Username=${RABBITMQ_DEFAULT_USER}
      - RabbitMQ:Password=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - auth-db
      - rabbitmq
    ports:
      - "3000:8080" # HTTP
      - "3001:8081" # HTTPS
    networks:
      - auth-network

  auth-db:
    image: postgres:17.5
    container_name: auth-db
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: ${AuthService_Database_Username}
      POSTGRES_PASSWORD: ${AuthService_Database_Password}
    ports:
      - "5433:5432"
    volumes:
      - auth_data:/var/lib/postgresql/data
    networks:
      - auth-network


  # Upload Service (NestJS + Firebase Storage)
  upload:
    build: ./services/upload
    environment:
      - NODE_ENV=development
      - FIREBASE_STORAGE_BUCKET=${UploadService_Firebase_Storage_Bucket}
      - FIREBASE_STORAGE_KEY=${UploadService_Firebase_Storage_Key}
    depends_on:
      - rabbitmq
    ports:
      - "5002:${UploadService_PORT}"
    networks:
      - upload-network


  # User Profile Service (NestJS + GraphQL + PostgreSQL)
  user:
    build: ./services/user
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${UserService_Database_Username}:${UserService_Database_Password}@user-db:5432/user_db
      - RABBITMQ_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672
      - JwtConfig_Key=${JwtConfig_Key}
      - JwtConfig_Issuer=${JwtConfig_Issuer}
      - JwtConfig_Audience=${JwtConfig_Audience}
      - JwtConfig_AccessTokenValidityMins=${JwtConfig_AccessTokenValidityMins}
      - JwtConfig_RefreshTokenValidityDays=${JwtConfig_RefreshTokenValidityDays}
    depends_on:
      - user-db
      - rabbitmq
    ports:
      - "5003:${UserService_PORT}"
    networks:
      - user-network

  user-db:
    image: postgres:17.5
    container_name: user-db
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: ${UserService_Database_Username}
      POSTGRES_PASSWORD: ${UserService_Database_Password}
    ports:
      - "5434:5432"
    volumes:
      - user_data:/var/lib/postgresql/data
    networks:
      - user-network


  # Course Service (GraphQL + MongoDB)
  course:
    build: ./services/course
    environment:
      - MONGO_URL=mongodb://course-db:27017/course_db
    depends_on:
      - course-db
    ports:
      - "5004:${CourseService_PORT}"
    networks:
      - course-network

  course-db:
    image: mongo:8
    container_name: course-db
    ports:
      - "27017:27017"
    volumes:
      - course_data:/data/db
    networks:
      - course-network


  # Lesson Service (GraphQL + MongoDB)
  lesson:
    build: ./services/lesson
    environment:
      - MONGO_URL=mongodb://lesson-db:27017/lesson_db
    depends_on:
      - lesson-db
    ports:
      - "5005:${LessonService_PORT}"
    networks:
      - lesson-network

  lesson-db:
    image: mongo:8
    container_name: lesson-db
    ports:
      - "27018:27017"
    volumes:
      - lesson_data:/data/db
    networks:
      - lesson-network


  # Progress Service (NestJS + GraphQL + PostgreSQL)
  progress:
    build: ./services/progress
    environment:
      - DATABASE_URL=postgresql://${ProgressService_Database_Username}:${ProgressService_Database_Password}@progress-db:5432/progress_db
    depends_on:
      - progress-db
    ports:
      - "5006:${ProgressService_PORT}"
    networks:
      - progress-network

  progress-db:
    image: postgres:17.5
    container_name: progress-db
    environment:
      POSTGRES_DB: progress_db
      POSTGRES_USER: ${ProgressService_Database_Username}
      POSTGRES_PASSWORD: ${ProgressService_Database_Password}
    ports:
      - "5435:5432"
    volumes:
      - progress_data:/var/lib/postgresql/data
    networks:
      - progress-network


  # Billing Service (REST + .NET + PostgreSQL)
  billing:
    build: ./services/billing
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings:DefaultConnection=Host=billing-db;Port=5432;Database=billing_db;Username=${BillingService_Database_Username};Password=${BillingService_Database_Password};
    depends_on:
      - billing-db
    ports:
      - "5007:8080"
      - "5008:8081"
    networks:
      - billing-network

  billing-db:
    image: postgres:17.5
    container_name: billing-db
    environment:
      POSTGRES_DB: billing_db
      POSTGRES_USER: ${BillingService_Database_Username}
      POSTGRES_PASSWORD: ${BillingService_Database_Password}
    ports:
      - "5436:5432"
    volumes:
      - billing_data:/var/lib/postgresql/data
    networks:
      - billing-network


  # Notification Service (REST or Event-Driven + MongoDB)
  notification:
    build: ./services/notification
    environment:
      - MONGO_URL=mongodb://notification-db:27017/notification_db
    depends_on:
      - notification-db
    ports:
      - "5009:${NotificationService_PORT}"
    networks:
      - notification-network

  notification-db:
    image: mongo:8
    container_name: notification-db
    ports:
      - "27019:27017"
    volumes:
      - notification_data:/data/db
    networks:
      - notification-network


volumes:
  auth_data:
  user_data:
  course_data:
  lesson_data:
  progress_data:
  billing_data:
  notification_data:

networks:
  auth-network:
  upload-network:
  user-network:
  course-network:
  lesson-network:
  progress-network:
  billing-network:
  notification-network: